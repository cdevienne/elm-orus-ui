[{"name":"OUI","comment":"\n\n@docs Color\n\n","unions":[{"name":"Color","comment":" Colors\n","args":[],"cases":[["Primary",[]],["PrimaryContainer",[]],["Secondary",[]],["SecondaryContainer",[]],["Tertiary",[]],["TertiaryContainer",[]],["Error",[]],["ErrorContainer",[]]]}],"aliases":[],"values":[],"binops":[]},{"name":"OUI.Button","comment":" A button creation API\n\n@docs Type, Button\n\n\n# Constructor\n\n@docs new\n\n\n# Basic properties\n\n@docs withText, withIcon, color\n\n\n# Actions\n\n@docs onClick, disabled\n\n\n# Button types\n\n@docs elevatedButton, filledButton, tonalButton, outlinedButton, textButton, fab, extendedFAB, iconButton\n\n\n# Internal\n\n@docs Props, getProperties\n\n","unions":[{"name":"Button","comment":" A button\n","args":["constraints","msg"],"cases":[]},{"name":"Type","comment":" A button type\n","args":[],"cases":[["Elevated",[]],["Filled",[]],["Tonal",[]],["Outlined",[]],["Text",[]],["FAB",[]],["ExtendedFAB",[]],["Icon",[]]]}],"aliases":[{"name":"Props","comment":" underlying properties of the button\n","args":["msg"],"type":"{ text : String.String, icon : Maybe.Maybe String.String, onClick : Maybe.Maybe msg, color : OUI.Color, type_ : OUI.Button.Type }"}],"values":[{"name":"color","comment":" Set the button primary color\n","type":"OUI.Color -> OUI.Button.Button a msg -> OUI.Button.Button a msg"},{"name":"disabled","comment":" Set the button as 'disabled'\n\nCan only be called once\n\n","type":"OUI.Button.Button { props | needOnClickOrDisabled : () } msg -> OUI.Button.Button { a | hasAction : () } msg"},{"name":"elevatedButton","comment":" Set the button type to 'Elevated' (default)\n","type":"OUI.Button.Button a msg -> OUI.Button.Button a msg"},{"name":"extendedFAB","comment":" Set the button type to 'ExtendedFAB'\n","type":"OUI.Button.Button { a | hasIcon : () } msg -> OUI.Button.Button { a | hasIcon : () } msg"},{"name":"fab","comment":" Set the button type to 'FAB'\n","type":"OUI.Button.Button { a | hasIcon : () } msg -> OUI.Button.Button { a | hasIcon : () } msg"},{"name":"filledButton","comment":" Set the button type to 'Filled'\n","type":"OUI.Button.Button a msg -> OUI.Button.Button a msg"},{"name":"getProperties","comment":" ","type":"OUI.Button.Button { constraints | hasText : (), hasAction : () } msg -> { text : String.String, icon : Maybe.Maybe String.String, onClick : Maybe.Maybe msg, color : OUI.Color, type_ : OUI.Button.Type }"},{"name":"iconButton","comment":" Set the button type to 'iconButton'\n","type":"OUI.Button.Button { a | hasIcon : () } msg -> OUI.Button.Button { a | hasIcon : () } msg"},{"name":"new","comment":" Create an empty button\n\nA text and an action (onClick or disabled) must be set before it can be\nrendered\n\nBy default, the button is of the 'Elevated' type, and its color is 'Primary'\n\n","type":"OUI.Button.Button { needOnClickOrDisabled : (), needText : (), hasNoIcon : () } msg"},{"name":"onClick","comment":" Set the button 'onClick' handler\n\nCan only be called once\n\n","type":"msg -> OUI.Button.Button { a | needOnClickOrDisabled : () } msg -> OUI.Button.Button { a | hasAction : () } msg"},{"name":"outlinedButton","comment":" Set the button type to 'Outlined'\n","type":"OUI.Button.Button a msg -> OUI.Button.Button a msg"},{"name":"textButton","comment":" Set the button type to 'TextButton'\n","type":"OUI.Button.Button a msg -> OUI.Button.Button a msg"},{"name":"tonalButton","comment":" Set the button type to 'Tonal'\n","type":"OUI.Button.Button a msg -> OUI.Button.Button a msg"},{"name":"withIcon","comment":" Set the button icon\n\nCan only be called once\n\n","type":"String.String -> OUI.Button.Button { a | hasNoIcon : () } msg -> OUI.Button.Button { a | hasIcon : () } msg"},{"name":"withText","comment":" Set the button text\n\nCan only be called once\n\n","type":"String.String -> OUI.Button.Button { a | needText : () } msg -> OUI.Button.Button { a | hasText : () } msg"}],"binops":[]},{"name":"OUI.Explorer","comment":"\n\n@docs BookMsg, Page, Route, Shared, SharedMsg, Explorer\n@docs addBook, book, category, event, explorer, finalize\n@docs withMarkdownChapter, withStaticChapter\n\n","unions":[{"name":"BookMsg","comment":" A stateless book message\n","args":[],"cases":[]},{"name":"SharedMsg","comment":" Shared state message\n","args":[],"cases":[]}],"aliases":[{"name":"Explorer","comment":" ","args":["shared","sharedMsg","current","previous","currentMsg","previousMsg"],"type":"{ app : Spa.Builder OUI.Explorer.Route () shared sharedMsg (OUI.Explorer.Page (Spa.PageStack.Msg OUI.Explorer.Route currentMsg previousMsg)) current previous currentMsg previousMsg, categories : List.List ( String.String, List.List String.String ) }"},{"name":"Page","comment":" A explorer page\n","args":["msg"],"type":"{ title : String.String, content : Element.Element msg }"},{"name":"Route","comment":" The explorer routes are simple strings\n","args":[],"type":"String.String"},{"name":"Shared","comment":" The shared state\n","args":[],"type":"{ lastEvents : List.List String.String }"}],"values":[{"name":"addBook","comment":" Add a book to the current category\n","type":"OUI.Explorer.Book OUI.Explorer.BookMsg -> OUI.Explorer.Explorer OUI.Explorer.Shared OUI.Explorer.SharedMsg current previous currentMsg previousMsg -> OUI.Explorer.Explorer OUI.Explorer.Shared OUI.Explorer.SharedMsg () (Spa.PageStack.Model Spa.SetupError current previous) OUI.Explorer.BookMsg (Spa.PageStack.Msg OUI.Explorer.Route currentMsg previousMsg)"},{"name":"book","comment":" Creates a new empty book\n","type":"String.String -> OUI.Explorer.Book msg"},{"name":"category","comment":" Add a category to a Explorer\n\nAll subsequent books will be added to this category, until a new category is\nadded.\n\n","type":"String.String -> OUI.Explorer.Explorer shared sharedMsg current previous currentMsg previousMsg -> OUI.Explorer.Explorer shared sharedMsg current previous currentMsg previousMsg"},{"name":"event","comment":" A simple event\n\nThe passed string will be logged in the event window\n\n","type":"String.String -> OUI.Explorer.BookMsg"},{"name":"explorer","comment":" creates an empty Explorer\n","type":"OUI.Explorer.Explorer shared sharedMsg () () () ()"},{"name":"finalize","comment":" Finalize a explorer and returns Program\n","type":"OUI.Explorer.Explorer OUI.Explorer.Shared OUI.Explorer.SharedMsg current previous currentMsg previousMsg -> Platform.Program () (Spa.Model String.String OUI.Explorer.Shared current previous) (Spa.Msg OUI.Explorer.SharedMsg (Spa.PageStack.Msg String.String currentMsg previousMsg))"},{"name":"withMarkdownChapter","comment":" Add a mardown chapter to a book\n","type":"String.String -> OUI.Explorer.Book msg -> OUI.Explorer.Book msg"},{"name":"withStaticChapter","comment":" Add a static content chapter to a book\n","type":"Element.Element msg -> OUI.Explorer.Book msg -> OUI.Explorer.Book msg"}],"binops":[]}]